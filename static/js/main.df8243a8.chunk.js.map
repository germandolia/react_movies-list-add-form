{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","error","onChange","event","target","name","value","setState","prevState","trim","clearForm","onSubmit","preventDefault","addMovie","props","urlPattern","test","this","type","placeholder","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df8243a8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrl: '',\n    error: {\n      title: '',\n      imdbUrl: '',\n      imdbId: '',\n      imgUrl: '',\n    },\n  };\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      [name]: value.trim(),\n      error: {\n        ...prevState.error,\n        [name]: false,\n      },\n    }));\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n    const {\n      addMovie,\n    } = this.props;\n\n    // eslint-disable-next-line max-len\n    const urlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (\n      title\n      && description\n      && (imgUrl && urlPattern.test(imgUrl))\n      && (imdbUrl && urlPattern.test(imdbUrl))\n      && imdbId\n    ) {\n      addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n      this.clearForm();\n    }\n\n    this.setState({\n      error: {\n        title: !title,\n        imdbId: !imdbId,\n        imdbUrl: !((imdbUrl === '' || urlPattern.test(imdbUrl))),\n        imgUrl: !((imgUrl === '' || urlPattern.test(imgUrl))),\n      },\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      error,\n    } = this.state;\n\n    return (\n      <form className=\"NewMovie\" onSubmit={this.onSubmit}>\n        <div className=\"NewMovie__field\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={this.onChange}\n            placeholder=\"Movie title\"\n            className={error.title\n              ? 'NewMovie__input NewMovie__input--invalid'\n              : 'NewMovie__input'}\n          />\n          {error.title && (\n            <span className=\"NewMovie__error\">\n              Please add movie title.\n            </span>\n          )}\n        </div>\n        <div className=\"NewMovie__field\">\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onChange={this.onChange}\n            placeholder=\"Movie description\"\n            className=\"NewMovie__input\"\n          />\n        </div>\n        <div className=\"NewMovie__field\">\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.onChange}\n            placeholder=\"Image link\"\n            className={error.imgUrl\n              ? 'NewMovie__input NewMovie__input--invalid'\n              : 'NewMovie__input'}\n          />\n          {error.imgUrl && (\n            <span className=\"NewMovie__error\">\n              Please add correct link to image.\n            </span>\n          )}\n        </div>\n        <div className=\"NewMovie__field\">\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.onChange}\n            placeholder=\"IMDB link\"\n            className={error.imdbUrl\n              ? 'NewMovie__input NewMovie__input--invalid'\n              : 'NewMovie__input'}\n          />\n          {error.imdbUrl && (\n            <span className=\"NewMovie__error\">\n              Please add correct link to IMDB.\n            </span>\n          )}\n        </div>\n        <div className=\"NewMovie__field\">\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.onChange}\n            placeholder=\"IMDB ID\"\n            className={error.imdbId\n              ? 'NewMovie__input NewMovie__input--invalid'\n              : 'NewMovie__input'}\n          />\n          {error.imdbId && (\n            <span className=\"NewMovie__error\">\n              Please add IMDB Id.\n            </span>\n          )}\n        </div>\n        <button\n          type=\"submit\"\n          className=\"NewMovie__button\"\n          disabled={!this.state.title\n            && !this.state.imgUrl\n            && !this.state.imdbUrl\n            && !this.state.imdbId}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}